<?php

namespace DoctrineProxies\__CG__\Udoktor\Domain\Users;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Udoktor\Domain\Users\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'id', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'email', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'tempPassword', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'active', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'verified', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'hasCompletedProfile', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'createdAt', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'updatedAt', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'deletedAt', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'role', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'classification', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'services', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'verificationToken', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'verificationDate', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'requestToken', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'requestDate', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'administrativeUnit', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'location', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'profilePicture', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'notifications', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'priceType', 'fullName', 'phoneNumber', 'cellphoneNumber', 'password', 'rememberToken'];
        }

        return ['__isInitialized__', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'id', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'email', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'tempPassword', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'active', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'verified', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'hasCompletedProfile', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'createdAt', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'updatedAt', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'deletedAt', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'role', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'classification', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'services', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'verificationToken', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'verificationDate', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'requestToken', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'requestDate', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'administrativeUnit', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'location', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'profilePicture', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'notifications', '' . "\0" . 'Udoktor\\Domain\\Users\\User' . "\0" . 'priceType', 'fullName', 'phoneNumber', 'cellphoneNumber', 'password', 'rememberToken'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addComponentsForServiceProvider(\Udoktor\Domain\Users\Classification $classification, \Udoktor\Domain\ICollection $services)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComponentsForServiceProvider', [$classification, $services]);

        return parent::addComponentsForServiceProvider($classification, $services);
    }

    /**
     * {@inheritDoc}
     */
    public function register()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'register', []);

        return parent::register();
    }

    /**
     * {@inheritDoc}
     */
    public function isServiceProvider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isServiceProvider', []);

        return parent::isServiceProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function isClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isClient', []);

        return parent::isClient();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function isActive(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function isVerified(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVerified', []);

        return parent::isVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function getVerificationDate(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerificationDate', []);

        return parent::getVerificationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getVerificationToken(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerificationToken', []);

        return parent::getVerificationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestToken(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestToken', []);

        return parent::getRequestToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestDate(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestDate', []);

        return parent::getRequestDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTempPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTempPassword', []);

        return parent::getTempPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getAdministrativeUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdministrativeUnit', []);

        return parent::getAdministrativeUnit();
    }

    /**
     * {@inheritDoc}
     */
    public function getClassification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClassification', []);

        return parent::getClassification();
    }

    /**
     * {@inheritDoc}
     */
    public function getservices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getservices', []);

        return parent::getservices();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function getProfilePicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfilePicture', []);

        return parent::getProfilePicture();
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifications', []);

        return parent::getNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceType', []);

        return parent::getPriceType();
    }

    /**
     * {@inheritDoc}
     */
    public function hasServices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasServices', []);

        return parent::hasServices();
    }

    /**
     * {@inheritDoc}
     */
    public function hasProfilePicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasProfilePicture', []);

        return parent::hasProfilePicture();
    }

    /**
     * {@inheritDoc}
     */
    public function updateProfilePicture($picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateProfilePicture', [$picture]);

        return parent::updateProfilePicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function verify($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'verify', [$token]);

        return parent::verify($token);
    }

    /**
     * {@inheritDoc}
     */
    public function requestPasswordReset()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'requestPasswordReset', []);

        return parent::requestPasswordReset();
    }

    /**
     * {@inheritDoc}
     */
    public function canResetPassword($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canResetPassword', [$token]);

        return parent::canResetPassword($token);
    }

    /**
     * {@inheritDoc}
     */
    public function resetPassword($newPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetPassword', [$newPassword]);

        return parent::resetPassword($newPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function hasCompletedProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCompletedProfile', []);

        return parent::hasCompletedProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function completeProfile(\Udoktor\Domain\Persons\FullName $fullName, $email, $contactNumber, \Udoktor\Domain\Regions\AdministrativeUnit $aUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'completeProfile', [$fullName, $email, $contactNumber, $aUnit]);

        return parent::completeProfile($fullName, $email, $contactNumber, $aUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function clearNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearNotifications', []);

        return parent::clearNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function hasNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasNotifications', []);

        return parent::hasNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addNotification($newNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNotification', [$newNotification]);

        return parent::addNotification($newNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function updateLocation(\Udoktor\Domain\Regions\Location $location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateLocation', [$location]);

        return parent::updateLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAllServices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAllServices', []);

        return parent::removeAllServices();
    }

    /**
     * {@inheritDoc}
     */
    public function addService(\Udoktor\Domain\Users\OfferedService $service)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addService', [$service]);

        return parent::addService($service);
    }

    /**
     * {@inheritDoc}
     */
    public function removeService(\Udoktor\Domain\Users\OfferedService $service)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeService', [$service]);

        return parent::removeService($service);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneNumber(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneNumber', []);

        return parent::getPhoneNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function getCellphoneNumber(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCellphoneNumber', []);

        return parent::getCellphoneNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', []);

        return parent::getFullName();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthIdentifierName', []);

        return parent::getAuthIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthIdentifier', []);

        return parent::getAuthIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthPassword', []);

        return parent::getAuthPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getRememberToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRememberToken', []);

        return parent::getRememberToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setRememberToken($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRememberToken', [$value]);

        return parent::setRememberToken($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getRememberTokenName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRememberTokenName', []);

        return parent::getRememberTokenName();
    }

}
